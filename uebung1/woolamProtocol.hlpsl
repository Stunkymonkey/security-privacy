% woo-lam protocol

role alice (A, S, B: agent,
		Kas, Kab : symmetric_key,
		SND_BA, RCV_BA: channel(dy))
  played_by A def=
  
  local State : nat,
	Nb, Na : text
	
  init State := 0
  
  transition
	1. State  = 0 /\ RCV_BA(start) =|>
	   State':= 2 /\ Na':= new()
				  /\	SND_BA(A, Na')

	2. State  = 2 /\ RCV_BA(B,Nb') =|>
	   State':= 3 /\ SND_BA({A.B.Na'.Nb'}_Kas)
	   
	3. State  = 5 /\ RCV_BA({B .Na'.Nb' .Kab'}_Kas ,{Na'.Nb'.Kab'}_Kab') =|>
	   State':= 5 /\ SND_BA({Nb'}_Kab')
				  
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob (A, S, B: agent,
		Kbs, Kab, Kas : symmetric_key,
		SND_AB, RCV_AB,SND_SB,RCV_SB: channel(dy))
  played_by B def=

  local State : nat,
	Nb, Na : text,
	X : {text}_symmetric_key

  init State := 1

  transition
		1. State  = 1 /\ RCV_AB(A, Na') =|>
		   State':= 3 /\ Nb':= new()
                      /\ SND_AB(B,Nb')
		      
        2. State  = 3 /\ RCV_AB({A.B.Na'.Nb'}_Kas.X) =|>
           State' :=5 /\ SND_SB({A.B.Na'.Nb'}_Kas.X,{A .B .Na'.Nb'}_Kbs)
 
        3. State  = 5 /\ RCV_SB({B. Na'.Nb'.Kab'}_Kas.X ,{A. Na'. Nb'. Kab'}_Kbs) =|>
           State' :=7 /\ SND_AB({B. Na'.Nb'.Kab'}_Kas.X ,{Na'.Nb'.Kab}_Kab')
		%4. State = 9 /\ RCV_AB({Nb'}_Kab') 
		  
end role 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



role server (A, S, B : agent,
		Kas, Kbs, Kab : symmetric_key,
		SND_BS, RCV_BS: channel(dy))
  played_by S def=
  
  local State : nat,
	Nb, Na : text
	
  init State := 5

  transition
	1. State  = 5 /\ RCV_BS({A .B.Na'.Nb'}_Kas,{A.B .Na'. Nb'}_Kbs) =|>
	   State':= 7 /\ SND_BS({B .Na'.Nb'.Kab'}_Kas,{A. Na'. Nb'. Kab'}_Kbs)
		      
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session(A, S, B : agent,
		Kas, Kbs , Kab : symmetric_key)
  def=
  
  local SND_AB, SND_SB, RCV_AB, SND_BA, SND_BS, RCV_BA,RCV_BS, RCV_SB: channel (dy)
 
composition
	   alice (A, S, B, Kas, Kab, SND_AB, RCV_BA)
	/\ server(A, S, B, Kas, Kbs, Kab, SND_SB, RCV_BS)
	/\ bob (A, S, B, Kbs, Kab, Kas, SND_BA, SND_BS, RCV_AB, RCV_SB)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment()
  def=
  const a, b, s : agent,
	kas, kbs, kis , kab : symmetric_key,
	bob_alice_kab: protocol_id

  intruder_knowledge = {a, b, s, kis}

  composition
	   session(a,s,b,kas,kbs,kab)
	/\ session(a,s,i,kas,kis, kab)
	/\ session(i,s,b,kis,kbs, kab)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal
authentication_on bob_alice_kab
authentication_on bob_alice_nb
authentication_on alice_bob_na
end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
environment()